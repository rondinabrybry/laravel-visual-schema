name: Tests (Shared Hosting Compatible)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php: [8.2, 8.3, 8.4]
        laravel: [10.*, 11.*, 12.*]
        include:
          - laravel: 10.*
            testbench: 8.*
          - laravel: 11.*
            testbench: 9.*
          - laravel: 12.*
            testbench: 10.*

    name: P${{ matrix.php }} - L${{ matrix.laravel }}

    steps:
    - uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.composer/cache/files
        key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        coverage: none

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
        composer update --prefer-stable --prefer-dist --no-interaction

    - name: Install NPM dependencies
      run: npm install

    - name: Build assets
      run: npm run build

    - name: Execute tests
      run: vendor/bin/phpunit

  static-assets-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Check static assets exist
      run: |
        if [ ! -f "resources/assets/js/schema-designer.js" ]; then
          echo "Main JavaScript file not found!"
          exit 1
        fi
        if [ ! -f "resources/assets/css/schema-designer.css" ]; then
          echo "Main CSS file not found!"
          exit 1
        fi
        echo "All static assets found - no build process required!"

    - name: Validate CDN dependencies
      run: |
        curl -f https://cdnjs.cloudflare.com/ajax/libs/alpinejs/3.13.3/cdn.min.js > /dev/null
        curl -f https://cdnjs.cloudflare.com/ajax/libs/fabric.js/5.3.0/fabric.min.js > /dev/null
        curl -f https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js > /dev/null
        echo "All CDN dependencies are accessible!"